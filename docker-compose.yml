version: "3.2"
#services:
#
#  docker-academy-backend:
#    build:
#      context: ./Backend
#      dockerfile: Dockerfile
#      cache_from:
#        - alpine:latest
#        - golang:1.9.1
#      labels:
#          com.example.description: "Backend app"
#          com.example.department: "DevOps Wizeline"
#    environment:
#      - CGO_ENABLED=0
#      - GOOS=linux
#    ports:
#      - "8000:8000"
#    dns:
#      - 8.8.8.8
#      - 9.9.9.9
#    healthcheck:
#      test: ["CMD-SHELL", "curl -f 0.0.0.0:8000 || exit 1"]
#      interval: 1m30s
#      timeout: 10s
#      retries: 3
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "200k"
#        max-file: "10"
#    restart: on-failure
#    command: ["./bin/api"]
#
#  docker-academy-frontend:
#    container_name: docker-academy-frontend
#    build:
#      context: ./Frontend
#      dockerfile: Dockerfile
#      cache_from:
#        - nginx:alpine
#        - mhart/alpine-node:8
#      labels:
#        com.example.description: "Frontend app"
#        com.example.department: "DevOps Wizeline"
#    ports:
#      - "80:80"
#    dns:
#      - 8.8.8.8
#      - 9.9.9.9
#    healthcheck:
#      test: ["CMD-SHELL", "curl -f http://localhost || exit 1"]
#      interval: 1m30s
#      timeout: 10s
#      retries: 3
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "200k"
#        max-file: "10"
#    restart: on-failure
#    depends_on:
#      - "docker-academy-backend"
